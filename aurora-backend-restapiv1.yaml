openapi: 3.0.0
info:
  title: aurora-backend-restapi
  version: '1.0'
servers:
  - url: 'https://api.auroradao-dev.tk'
    description: dev
  - url: 'https://api.auroradao.org'
    description: prod
paths:
  /post:
    post:
      summary: Upload Post
      operationId: post-post
      responses:
        '200':
          description: Post Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
        '400':
          description: Missing Required Information
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                  description: ''
                image:
                  $ref: '#/components/schemas/Image'
                titleImage:
                  type: string
                descriptionImage:
                  type: string
              required:
                - title
                - description
                - image
                - titleImage
                - descriptionImage
            examples: {}
      parameters: []
    parameters: []
  /refund:
    post:
      summary: Upload refund request
      operationId: post-refund
      responses:
        '200':
          description: Refund Request Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
              examples:
                example-1:
                  value:
                    metadata: unyIhiKh3399qUszWer0fjy38ppVlujh35SRBAT7DL0
                    imageUrl: unyIhiKh3399qUszWer0fjy38ppVlujh35SRBAT7DL0
        '400':
          description: Missing Required Information
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: string
                  description: ''
              required:
                - postId
            examples:
              example-1:
                value:
                  postId: '0xe6a8b2b83a40'
      parameters: []
    parameters: []
  /receipt:
    post:
      summary: Upload receipt
      operationId: post-receipt
      responses:
        '200':
          description: Receipt Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
              examples:
                example-1:
                  value:
                    metadata: unyIhiKh3399qUszWer0fjy38ppVlujh35SRBAT7DL0
                    imageUrl: unyIhiKh3399qUszWer0fjy38ppVlujh35SRBAT7DL0
        '400':
          description: Missing Required Information
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                postId:
                  type: string
                  description: ''
                address:
                  type: string
                  description: address of a wallet
              required:
                - amount
                - postId
                - address
            examples:
              example-1:
                value:
                  amount: '10000000000'
                  postId: '0xe6a8b2b83a40'
                  address: '0xe6a8b2b83a40'
      parameters: []
    parameters: []
  /preview:
    post:
      summary: Receipt Preview Temporaly
      operationId: preview-post
      responses:
        '200':
          description: Preview Creted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewResponse'
        '400':
          description: Missing Required Information
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                  description: ''
                image:
                  $ref: '#/components/schemas/Image'
              required:
                - title
                - description
                - image
            examples: {}
      parameters: []
    parameters: []
  /sample:
    post:
      summary: Create Sample Card from preview Token and postId
      operationId: sample-post
      responses:
        '200':
          description: Sample Creted
        '400':
          description: Missing Required Information
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                postId:
                  type: string
                  description: ''
              required:
                - token
                - postId
            examples: {}
      parameters: []
      description: 'Create Sample Card from preview Token and postId. Caution: this method doesnt have idempotency. You cannot execute this method again with postId which you have already executed with.'
    parameters: []
components:
  schemas:
    Image:
      title: Image
      type: object
      properties:
        data:
          description: ''
          type: string
        contentType:
          type: string
          description: ''
      required:
        - data
        - contentType
    PostResponse:
      description: ''
      type: object
      properties:
        imageUrl:
          type: string
          minLength: 1
        metadataUrl:
          type: string
          minLength: 1
      required:
        - imageUrl
        - metadataUrl
    PreviewResponse:
      description: ''
      type: object
      properties:
        temporalyUrl:
          type: string
          minLength: 1
          description: Temporaly url to download card preview. This will expire in several minutes.
        token:
          type: string
          minLength: 1
      required:
        - temporalyUrl
        - token
    Metadata:
      description: ''
      type: object
      properties:
        metadata:
          type: string
          minLength: 1
        imageUrl:
          type: string
      required:
        - metadata
        - imageUrl
  securitySchemes:
    APIKey:
      name: API Key
      type: apiKey
      in: header
  responses: {}
security:
  - API Key - 1: []
