name: ci

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Set Node.js 14.x
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14.x
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: yarn install with cache
        run: yarn --prefer-offline
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: workaround for detached HEAD
        run: |
          git checkout ${GITHUB_HEAD_REF} || git checkout -b ${GITHUB_HEAD_REF} && git pull
      - name: run vrt
        run: yarn vrt

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.VRT_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.VRT_AWS_SECRET_ACCESS_KEY }}
